{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQF,EAAEG,cAAcd,MAAMe,cAClC,MAAMC,EAAOL,EAAEG,cAAcd,MAAMe,cAC7BE,EAASN,EAAEG,cAAcG,OAAOF,cAEtC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDL,GAASG,EACTG,QAAQC,IAAIP,GACZf,EAAcoB,EAAUL,GACrBQ,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = e.currentTarget.delay.valueAsNumber;\n  const step = e.currentTarget.delay.valueAsNumber;\n  const amount = e.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n    console.log(delay);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n\n    // return promise;\n  });\n\n  // promise\n  //   .then(({ position, delay }) => {\n  //     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","currentTarget","valueAsNumber","step","amount","position1","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.660ebf2e.js.map"}